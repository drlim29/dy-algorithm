#include <bits/stdc++.h>

using namespace std;
int n, m;
int graph[1000][1000];

//DFS 특정 노드를 방문하고 연결된 모든 노드들도 방문
bool dfs(int x, int y) {
    //주어진 범위를 벗어나면 종료
    if (x <= -1 || x >= n || y <= -1 || y>= m) {
        return false;
    }
    
    //현재 노드를 방문하지 않으면 방문처리 및 재귀 호출
    if (graph[x][y] == 0) {
        //방문처리
        graph[x][y] = 1;
        //상하좌우 호출
        dfs(x-1, y);
        dfs(x, y-1);
        dfs(x+1, y);
        dfs(x, y+1);
        return true;
    }
    return false
}

int main() {
    //n,m을 입력받기
    cin >> n >> m;
    //2차원 리스트의 맵 정보 입력받기
    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            scanf("%1d", &graph[i][j]);
        }
    }
    
    //모든 위치에 음료수 채우기
    int result = 0;
    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            //현재 위치에서 dfs 수행
            if (dfs(i, j)) {
                result +=1;
            }
        }
    }
    cout << result <<'\n';
}